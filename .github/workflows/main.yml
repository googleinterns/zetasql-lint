# This is a continuous action workflow for checking style.
name: CI

# Controls when the action will run. Triggers the workflow on push
# events but only for the master branch. Triggers on all pull requests.
on:
  push:
    branches: [ master ]
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a two jobs.
  # The first checks the code's style. The second builds & tests the library.
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cpplint
    - name: Lint with cpplint
      run: cpplint  --recursive .

  check-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Run format.sh
      run: ./format.sh

    - name: Check formatting diff
      run: |
        CHANGED_FILES="$(git diff-index --name-only HEAD --)"
        if [[ -z "${CHANGED_FILES}" ]]; then
          echo "Success: no formatting changes needed."
          exit 0
        fi
        echo "Found formatting changes in the following files:"
        echo "${CHANGED_FILES}"
        echo ""
        echo "Please run format.sh to apply the changes."
        exit 1

  build-and-test:
    env:
      CC: gcc-8
      BAZEL_CXXOPTS: -std=c++17
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel

    - name: Install bazelisk
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.4.0/bazelisk-linux-amd64"
        mkdir -p "${GITHUB_WORKSPACE}/bin/"
        mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
        chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
    - name: Build
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" build ...
    - name: Test
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" test ...
